# the upstream component nginx needs to connect to
# Configuracion para gunicorn (para uwsgi hay que comentar todo el apartado "upstream django")
upstream django {
   # server unix:/tmp/piWebGu.sock fail_timeout=0;
   server 127.0.0.1:8008; # for a web port socket (we'll use this first)
}

# configuration of the server
server {
    # the port your site will be served on
    listen      443 default ssl;
    ssl on;
    ssl_buffer_size 16k;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    ssl_prefer_server_ciphers on;
    ssl_dhparam /usr/local/nginx/ssl/dhparam.pem;
    ssl_certificate /usr/local/nginx/ssl/nginx.crt;
    ssl_certificate_key /usr/local/nginx/ssl/nginx.key;

    # the domain name it will serve for
    server_name 192.168.1.20; # substitute your machine's IP address or FQDN
    charset     utf-8;

    # max upload size
    client_body_buffer_size 10K;
    client_header_buffer_size 1k;
    client_max_body_size 8m;
    large_client_header_buffers 2 1k;

    client_body_timeout 12;
    client_header_timeout 12;
    keepalive_timeout 15;
    send_timeout 10;

    # Django media
    location /media  {
        root /home/tmp;  # your Django project's media files - amend as required
    }

    location /static {
        root /home/nfs/raspiWeb; # your Django project's static files - amend as required
    }

    # Finally, send all non-media requests to the Django server.
    location / {
        # Configuracion para uwsgi
        #include     /etc/nginx/uwsgi_params; # the uwsgi_params file you installed
        #uwsgi_pass   unix:/tmp/raspiWeb.sock;

        # # Configuracion para gunicorn
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        if (!-f $request_filename) {
            proxy_pass http://django;
            break;
        }
    }
}
